version: '3.9'
services:
  flask_app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - MYSQL_HOST=mysql-service
      - MYSQL_PORT=3306
      - MYSQL_USER=guillou73
      - MYSQL_PASSWORD=admin
      - MYSQL_DB=admin
      - MYSQL_URI=mysql+pymysql://guillou73:admin@mysql-service:3306/admin
    depends_on:
      mysql-service:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  mysql-service:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: admin
      MYSQL_USER: guillou73
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "guillou73", "-padmin"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - app-network

  pytest:
    build:
      context: .
      dockerfile: Dockerfile.pytest
    depends_on:
      mysql-service:
        condition: service_healthy
      flask_app:
        condition: service_healthy
    environment:
      - MYSQL_HOST=mysql-service
      - MYSQL_PORT=3306
      - MYSQL_USER=guillou73
      - MYSQL_PASSWORD=admin
      - MYSQL_DB=admin
    command: >
      sh -c '
      /wait.sh mysql-service:3306 &&
      pytest test_main.py -v --tb=short
      '
    networks:
      - app-network
    volumes:
      - .:/app

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge
